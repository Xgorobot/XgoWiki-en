{"meta":{"title":"Xgo Wiki","subtitle":"","description":"","author":null,"url":"https://xgorobot.github.io/XgoWiki-en","root":"/XgoWiki-en/"},"pages":[{"title":"About","date":"2022-06-06T05:34:02.623Z","updated":"2022-06-06T05:34:02.623Z","comments":true,"path":"about/index.html","permalink":"https://xgorobot.github.io/XgoWiki-en/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2022-06-06T05:34:02.623Z","updated":"2022-06-06T05:34:02.623Z","comments":true,"path":"categories/index.html","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2022-06-06T05:34:02.624Z","updated":"2022-06-06T05:34:02.624Z","comments":true,"path":"tags/index.html","permalink":"https://xgorobot.github.io/XgoWiki-en/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"<ROS Pankaee>","slug":"1 XGO-Mini/For XGO developer/ROS package","date":"2022-06-06T05:34:01.893Z","updated":"2022-06-06T05:34:01.893Z","comments":true,"path":"wiki/1 XGO-Mini/For XGO developer/ROS package/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/For%20XGO%20developer/ROS%20package/","excerpt":"","text":"ROS Package download","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"For XGO developer","slug":"1-XGO-Mini/For-XGO-developer","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/For-XGO-developer/"}],"tags":[]},{"title":"ROS","slug":"1 XGO-Mini/For XGO developer/ROS","date":"2022-06-06T05:34:01.893Z","updated":"2022-06-06T05:34:01.893Z","comments":true,"path":"wiki/1 XGO-Mini/For XGO developer/ROS/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/For%20XGO%20developer/ROS/","excerpt":"","text":"Download","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"For XGO developer","slug":"1-XGO-Mini/For-XGO-developer","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/For-XGO-developer/"}],"tags":[]},{"title":"How to update firmware of XGO-Mini driver","slug":"1 XGO-Mini/F.A.Q/How to update firmware of XGO-Mini driver","date":"2022-06-06T05:34:01.856Z","updated":"2022-06-06T05:34:01.857Z","comments":true,"path":"wiki/1 XGO-Mini/F.A.Q/How to update firmware of XGO-Mini driver/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/F.A.Q/How%20to%20update%20firmware%20of%20XGO-Mini%20driver/","excerpt":"","text":"XGO-Mini STM32 firmware download 1 Use JLink to burn Hardware connection First, connect 3V3, SWDIO, SWCLK, and GND on the jlink to the corresponding pins on the motherboard. Pay attention to the line order! Inserting it backwards may burn the chip! . New Construction Open JFLASH, create a new project, click the button on the right side of Target Device, and select the STM32F405RG series in the new window Start burning First drag the hex file into the software page. Click Target-&gt;Connect to connect to the motherboard. If the connection is successful, Connected Successful will be displayed below. If it fails, please check whether the download tool and the motherboard are loose. Click Target-&gt;Auto to complete the programming. If there is no Auto, manualprogramming-&gt;Program&amp;Verify can also be burned. 2 Use STLink for programming Hardware connection First, connect 3V3, SWDIO, SWCLK, and GND on the jlink to the corresponding pins on the motherboard. Pay attention to the line order! Inserting it backwards may burn the chip! . Start burning Open ST-LINK Utility Drag the hex file into the grey area Click Target -&gt; Connect at the top, then click Target -&gt; Program&amp;Verify 3 Use USB to burn Hardware connection Turn the download dial to the ON position, plug in the USB data cable and connect it to the computer ISP burning Open FLYMCU, the operation is as shown below Note that all the information inside the STM32 will be erased when using USB ISP programming, that is, the recorded zero position of the servo will be erased, so after programming using USB, it needs to be calibrated.","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"F.A.Q","slug":"1-XGO-Mini/F-A-Q","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/F-A-Q/"}],"tags":[]},{"title":"编辑指南","slug":"Edit","date":"2022-02-26T11:45:57.000Z","updated":"2022-06-06T05:34:02.606Z","comments":true,"path":"wiki/Edit/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/Edit/","excerpt":"","text":"Markdown 本Wiki站的文章可通过点击右上角的 Edit 按钮跳转到Github页面，对文章源文件进行编辑。源文件编辑使用的格式为Markdown。 编辑完成后请联系Github管理员，由Github管理员push到Git page上。 中文Markdown官方教程 建议在本地的Markdown编辑器上编辑好后复制/上传，写起来会方便些。 目录 本Wiki站的所有文章目录结构按照Github仓库中文章源文件目录结构编辑（如下图），在创建新文章时可直接跳转到Github创建源文件。 创建文件 创建文件或文件夹时，请注意命名：Windows文件名不能包含下列任何字符 /：*？“ 创建.md文件后，请在文件中写入以下代码，并将&lt;文章标题&gt;修改为文章标题（否则无法在目录中显示），后续改动文章内容时不要删除改代码 --- title: &lt;文章标题&gt; toc: true date: tags: categories: --- 图片 文章插入图片时，格式为 ![文字描述](图片路径) 示例 ![Wiki目录](./demo_category.jpg) 一篇文章的图片建议统一放在文章源文件同级文件夹中，文件夹命名需要与文章名一致 示例","categories":[],"tags":[]},{"title":"Product introduction","slug":"3 XGO-Ultra/Product introduction","date":"2022-02-23T15:45:57.000Z","updated":"2022-06-06T05:34:02.486Z","comments":true,"path":"wiki/3 XGO-Ultra/Product introduction/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/3%20XGO-Ultra/Product%20introduction/","excerpt":"","text":"XGO-Ultra coming soon","categories":[{"name":"3 XGO-Ultra","slug":"3-XGO-Ultra","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/3-XGO-Ultra/"}],"tags":[]},{"title":"How to calibrate XGO-Mini?","slug":"1 XGO-Mini/F.A.Q/How to calibrate XGO-Mini","date":"2022-02-23T15:45:57.000Z","updated":"2022-06-06T05:34:01.835Z","comments":true,"path":"wiki/1 XGO-Mini/F.A.Q/How to calibrate XGO-Mini/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/F.A.Q/How%20to%20calibrate%20XGO-Mini/","excerpt":"","text":"I. Use XGO APP software Connect with the robot dog through bluetooth, then click the gear in the upper right corner to enter the setting page, and choose to run in developer mode. Return to the main interface page, a new button appears on the top of the software, click to enter the calibration interface. Click \"CALIBRATE\" button, the servo will be unloaded in time. Place the robot dog to the position shown below, it is recommended to put a flat piece of paper underneath, so that the body is flush with the desktop, the thigh and the body are at a 90° angle, and the calf and the thigh are at a 90° angle , the calf is touching the ground. Click to \"CALIBRATED\" button in the APP, the robot dog will return to the original position. II. Use the driver board to calibrate Remove the back cover with a hexagonal wrench, and then dial the calibration dial to the ON position. If it is already in the ON position, dial it back and then dial it to the ON position,the servo will be unloaded in time. Place the robot dog to the position shown below, it is recommended to put a flat piece of paper underneath, so that the body is flush with the desktop, the thigh and the body are at a 90° angle, and the calf and the thigh are at a 90° angle , the calf is touching the ground. Then dial the calibration dial back, and the calibration is completed in time, and the robot dog will return to the original position.","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"F.A.Q","slug":"1-XGO-Mini/F-A-Q","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/F-A-Q/"}],"tags":[]},{"title":"How to program with Micropython?","slug":"1 XGO-Mini/F.A.Q/How to program with Micropython","date":"2022-02-23T15:45:57.000Z","updated":"2022-06-06T05:34:01.855Z","comments":true,"path":"wiki/1 XGO-Mini/F.A.Q/How to program with Micropython/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/F.A.Q/How%20to%20program%20with%20Micropython/","excerpt":"","text":"sipeed https://wiki.sipeed.com/soft/maixpy/en/","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"F.A.Q","slug":"1-XGO-Mini/F-A-Q","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/F-A-Q/"}],"tags":[]},{"title":"How to update firmware of K210 and SD files","slug":"1 XGO-Mini/F.A.Q/How to update firmware of K210 and SD files","date":"2022-02-23T15:45:57.000Z","updated":"2022-06-06T05:34:01.855Z","comments":true,"path":"wiki/1 XGO-Mini/F.A.Q/How to update firmware of K210 and SD files/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/F.A.Q/How%20to%20update%20firmware%20of%20K210%20and%20SD%20files/","excerpt":"","text":"How to burn K210 firmware Detailed list XGO-Mini K210 robot dog a windows computer A data cable connecting the computer and the robot dog Steps Download kflash ​kflash download Connect the dog and update the firmware ​1. Open the software, the following window will pop up ​2. Select the .kfpkg file (cocorobo-ai-module_firmware.kfpkg) File download address English kfpkg Connect the computer and the dog, the port will be filled in automatically ​4. Start the download and wait for the download to succeed (keep the connection between the computer and the dog stable) After completion, the version date will changed as the file name of kfpkg. How to update SD card file Turn off the module and pull out the screen module, take out the SD card from the SD card slot, and read the SD card file on the computer through the SD card reader. The general directory is as follows. Fill in the content, the directory structure remains unchanged, SD card English file download SdCodes","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"F.A.Q","slug":"1-XGO-Mini/F-A-Q","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/F-A-Q/"}],"tags":[]},{"title":"Develop mode","slug":"1 XGO-Mini/For XGO developer/Develop mode","date":"2022-02-23T15:45:57.000Z","updated":"2022-06-06T05:34:01.883Z","comments":true,"path":"wiki/1 XGO-Mini/For XGO developer/Develop mode/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/For%20XGO%20developer/Develop%20mode/","excerpt":"","text":"Develop mode The developer firmware only retains the functions of servo angle control, PID modification, servo calibration, servo angle feedback, fuselage attitude angle feedback, battery power feedback, shutdown protection, and low battery protection. Compared with the default version firmware, the developer firmware can only be controlled through the serial port and cannot be remotely controlled through Bluetooth, but the overall control frequency is higher, the baud rate is changed to 1000000, and the bottom layer control frequency for the servo is 250Hz; canceled The read function is changed to send data frames to the upper computer at a frequency of 50Hz, including battery power, attitude angle, and servo angle data, and the data feedback is more timely. The feedback frequency of the servo angle is currently about 26Hz due to hardware reasons. The specific data frame format is shown in the following table. It is recommended to use it with the developer version of the Python library and sample programs. The default parameters of PID are 20, 0, 0. In order to protect the servo and circuit board, it is recommended that the PID parameter should not be greater than 60. developer firmware of XGO-Mini name content frame header 0x55 0x00 frame length 0x21 reserved bit 0x00 0x00 roll float32 pitch float32 yaw float32 motor11 uint8 motor12 uint8 motor13 uint8 motor21 uint8 motor22 uint8 motor23 uint8 motor31 uint8 motor32 uint8 motor33 uint8 motor41 uint8 motor42 uint8 motor43 uint8 battery uint8 checksum uint8 frame end 0x00 0xAA","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"For XGO developer","slug":"1-XGO-Mini/For-XGO-developer","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/For-XGO-developer/"}],"tags":[]},{"title":"How to install Raspberry on XGO-Mini","slug":"1 XGO-Mini/For XGO developer/How to install Raspberry on XGO-Mini","date":"2022-02-23T15:45:57.000Z","updated":"2022-06-06T05:34:01.883Z","comments":true,"path":"wiki/1 XGO-Mini/For XGO developer/How to install Raspberry on XGO-Mini/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/For%20XGO%20developer/How%20to%20install%20Raspberry%20on%20XGO-Mini/","excerpt":"","text":"","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"For XGO developer","slug":"1-XGO-Mini/For-XGO-developer","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/For-XGO-developer/"}],"tags":[]},{"title":"Python Lib","slug":"1 XGO-Mini/For XGO developer/Python Lib","date":"2022-02-23T15:45:57.000Z","updated":"2022-06-06T05:34:01.893Z","comments":true,"path":"wiki/1 XGO-Mini/For XGO developer/Python Lib/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/For%20XGO%20developer/Python%20Lib/","excerpt":"","text":"XGOLIB Python Library aim This document aims to describe the API interface of XGO in detail for the development of upper computer python. XGO-Mini Python Lib Download. Revision record 2022.3.10 creat XGO Class All functions are implemented by the methods owned by XGO. When instantiating an XGO class object, three parameters need to be passed in. The first one is the physical interface for serial communication between the host computer and the robot dog. It needs to be modified according to the actual situation. The second parameter is the baud rate of 115200, and the third parameter is 'xgomini' or 'xgolite' according to the model. Assuming that the serial communication interface is COM4, the instantiation code is as follows. 12dog = XGO(&#x27;COM4&#x27;,115200,&#x27;xgomini&#x27;)dog = XGO(&#x27;COM4&#x27;,115200,&#x27;xgolite&#x27;) The following will borrow the dog object to describe the function of the class method. For methods related to pose adjustment and single-leg control, you can check the serial port communication protocol document to understand the definition of the robot coordinate system. Mobile related methods 1.Front and back, left and right translation move(direction, step) Parameter Name Format Input Range Description direction character 'x'、'X'、'y'、'Y' 'x'or'X'moves the machine dog forward or back，'y'or'Y'moves the machine dog left or right step figure x:[-25,25],y:[-18,18] This parameter represents the translation step size, according to the direction, a positive value represents forward or left shift, and a negative value represents backward or right shift. When the input value exceeds the range, move according to the limit value 2.revolve turn(step) Parameter Name Format Input Range Description step figure [-150,150] This parameter represents rotational speed in ° / s, positive is left and negative is right. 3.mark time mark_time(data) Parameter Name Format Input Range Description data figure [10,35] This parameter represents the height of leg lift in mm and stop standing when the input is 0 4.step frequency pace(mode) speed = step frequency x stripe Parameter Name Format Input Range Description mode string ['normal','slow','high'] This parameter represents the step frequency, and normal is the default step frequency, low is the slow step frequency, and high is the high-speed step frequency 5.stop stop() 123456789101112131415161718192021222324demo#The machine dog moves at 18mm stripedog.move(&#x27;x&#x27;,18)#The machine dog moves right in 5mm stripedog.move(&#x27;y&#x27;,-5)#The code can be executed normally and will move left at 18mm stripe dog.move(&#x27;Y&#x27;,30)#The machine dog turns left at 60 ° / sdog.turn(60)#The machine dog moves at a high-speed pacedog.pace(&#x27;high&#x27;)#The machine dog mark time at the height of 25mmdog.mark_time(25)#The machine dog stop make timedog.mark_time(0)#Machine dog stopdog.stop() A series of methods are encapsulated in the library based on these methods for easy use. name explain move_x(step) Move front and back, equivalent to move('x', step) move_y(step) Move left to right, equivalent to move('y', step) forward(step) Forward, equivalent to move('x', abs(step)) back(step) Back, equivalent to move('x', -abs(step)) left(step) Left , equivalent to move('y', abs(step)) right(step) Right , equivalent to move('y', -abs(step)) turnleft(step) Left turn, equivalent to turn(abs(step)) turnright(step) Turn right, equivalent to turn(-abs(step)) Position Methods When adjusting the position, the foot position of the four legs does not change, and the position or Angle of the body changes. 1.Body position translation translation(direction, data) Parameter Name Format Input Range Description direction Single-character or character list 'x'、'y'、'z'or a list containing the above values 'x' represents forward and backward translation, 'y' represents left and right translation, and 'z' represents height data figure x:[-35,35],y:[-18,18],z:[75,115] This parameter represents the body position translation distance in mm 2.Body posture adjustment attitude(direction, data) Parameter Name Format Input Range Description direction Single-character or character list 'r'、'p'、'y'or a list containing the above values 'r'is roll，'p'is pitch，'y'is yaw data figure r:[-20,20],p:[-15,15],y:[11,11] This parameter represents the magnitude of the body pose adjustment in ° 3.Body cycle translation periodic_tran(direction, period) the body will be reciprocated in the specified period and direction by half the position translation limit, allowing periodic movements in multiple directions simultaneously.Body cycle movement and the whole machine movement cannot be carried out at the same time. Parameter Name Format Input Range Description direction Single character or character list 'x'、'y'、'z'or a list containing the above values 'x'represents forward and backward translation，'y'represents left and right translation，'z'represents height period figure [1.5,8] This parameter represents the motion cycle in second; entering 0 represents the stop movement 4.Body cycle rotation periodic_rot(direction, period) Parameter Name Format Input Range Description direction Single character or character list 'r'、'p'、'y'or a list containing the above values 'r'is roll，'p'is pitch，'y'is yaw period figure [1.5,8] This parameter represents the motion cycle in second; entering 0 represents the stop movement 12345678910111213141516171819demo#The body translate18mm forwarddog.translation(&#x27;x&#x27;,18)#The body translate10mm to the right and height set to 100mm#You can enter either a single value or a list to control the movement in multiple directionsdog.translation([&#x27;y&#x27;,&#x27;z&#x27;],[-10,100])#The body pitch angle was set to 10 °, yaw angle set to-4 ° and roll angle set to 8 °dog.attitude([&#x27;p&#x27;,&#x27;y&#x27;,&#x27;r&#x27;],[10,-4,8])#The body was operated in a 3s cycle, with forward and backward translationdog.periodic_tran(&#x27;x&#x27;,3)#The body was reciprocated at a 3s cycle and at a yaw angle at a 7.4s cycledog.periodic_rot([&#x27;r&#x27;,&#x27;y&#x27;],[3,7.4])#Stop the reciprocation of the yaw angledog.periodic_rot(&#x27;y&#x27;,0) other methods Restore the initial state reset() stops all movements, and all states return to the initial state Set the self-stabilization imu(mode) When self-stable , the machine dog will automatically adjust the attitude angle to keep the back in a horizontal position, and must not manually set the attitude angle when turned on. Parameter Name Format Input Range Description mode integer 0、1 0 Represents turn off, and 1 represents turn on perform(mode) In performance mode, the robot dog will cycle through the preset actions. Parameter Name Format Input Range Description mode integer 0、1 0 Represents turn off, and 1 represents turn on Single Leg leg(leg_id, data) Controls the foot position of the specified leg Parameter Name Format Input Range Description leg_id integer 1、2、3、4 They represent the left front, right front, right rear and left rear data List of numbers of length 3 x:[-35,35],y:[-18,18],z:[75,115] This parameter represents the foot position in mm 123demo#Set the foot position of the right front leg as (10mm,-12mm,90mm)dog.leg(2,[10,-12,90]) Servo Control motor(motor_id, data) controls the rotation angle of the Servo Parameter Name Format Input Range Description motor_id ist of integer or integer [11,12,13,21,22,23,31,32,33,41,42,43] The first number 1,2,3,4 stand for left front , right front ,right rear ,left rear.The second number 1,2,3 stand for down ,middle and upper Servo data List of numbers or numbers Down:[-65, 73],Middle:[-66, 93],Upper:[-31, 31] This parameter represents the foot position in ° 123456demo#Set the right front leg middle Servo rotation angle to 30 °dog.motor(22,30)#Set the rotation angle of the upper right front leg at 10 ° and the down left rear leg at-20 °dog.motor([23,41],[10,-20]) Uninstall the single leg Servo unload_motor(leg_id) unload three Servo on one leg without output torque, which can be rotate by hand, generally used for writing actions Parameter Name Format Input Range Description leg_id integer 1,2,3,4 They represent the left front, right front, right rear and left rear All Servo are uninstalled unload_allmotor() makes all Servo unloaded without output torque and can be turned by hand Single leg Servo loading load_motor(leg_id) keeps the three Servo on one leg in current position, output the torque, which can not be rotated by hand, and is generally used for writing actions Parameter Name Format Input Range Description leg_id integer 1,2,3,4 They represent the left front, right front, right rear and left rear All Servo are loaded load_allmotor() keeps all Servo in current position, output torque which can not be turned by hand Set the Servo rotation speed motor_speed(speed) adjusts the rotation speed of the Servo for separate control Parameter Name Format Input Range Description speed integer [0,255] 0 At the lowest speed and 255 at the highest speed update the name of bluetooth bt_rename(name) Re-modify the bluetooth name, the bluetooth will disconnect after calling this function Parameter Name Format Input Range Description name String Length not greater than 10 The Bluetooth name format of the robot dog is XGO_xxx, xxx is the modifiable part, and only supports characters in ascii code. Perform a preset action action(action_id) Parameter Name Format Input Range Description action_id integer [1,255] The ID and action correspondence is shown in the table below ID action ID action ID action 1 fall 2 stand 3 crawling 4 circle 5 Mark time 6 Squat up 7 Roll 8 Pitch 9 Yaw 10 Three-axis rotation 11 pee 12 sit down 13 hi 14 stretch 15 wave 16 left right 17 pray 18 find food 19 shake hands happy new year calibration calibration(state) If some joints have obvious position deviation after power on, you can call this function for calibration. Parameter Name Format Input Range Description state integer [0,1] 1 Enter the calibration state, at this time the steering gear is unloaded, and then swing the robot dog to the calibration state, the calf is parallel to the ground, the thigh and the torso are at 90°, and the torso is parallel to the ground; 0 Complete the calibration Read read the servo read_motor() Read the angles of 12 servos, If the reading is successful, a list of length 12 will be returned, corresponding to servo with numbers [11, 12, 13, 21, 22, 23, 31, 32, 33, 41, 42, 43]. Returns an empty list if the read fails Read the battery read_battery() read the current battery level, If the reading is successful, it will return an integer from 1 to 100, which represents the percentage of remaining battery power. Returns 0 on read failure. read positon read_roll() read_pitch() read_yaw() Read the current attitude angle, if the reading is successful, a floating-point number will be returned, and if the reading fails, it will return 0","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"For XGO developer","slug":"1-XGO-Mini/For-XGO-developer","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/For-XGO-developer/"}],"tags":[]},{"title":"Serial protocol","slug":"1 XGO-Mini/For XGO developer/Serial protocol","date":"2022-02-23T15:45:57.000Z","updated":"2022-06-06T05:34:01.893Z","comments":true,"path":"wiki/1 XGO-Mini/For XGO developer/Serial protocol/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/For%20XGO%20developer/Serial%20protocol/","excerpt":"","text":"Document purpose This document applies to the communication protocol of data interaction between any host computer and XGO series robot dog driver board. It is suitable for secondary development of XGO by high-level developers.The communication protocol is based on standard TTL serial communication and features XH2.54 4PIN interface connection. Update record 2022.3.10 Create. Hardware connection Use a hexagonal wrench to unscrew the two screws on the back, the screws on the left and right sides, and the two screws on the tail, remove the back panel of the robot dog, and unplug the switch cable. As shown in the figure below, there are two serial communication interfaces on one side of the motherboard, which are connected according to the motherboard silkscreen line sequence and the host computer line sequence (TX to RX, RX to TX), and then you can debug. The external power supply voltages of the two terminals are 5V and 3.3V respectively, which cannot be used at the same time. By default, the 3.3V terminal is occupied by the AI module. If you want to use other devices for serial control, please unplug the AI module and the motherboard. Software interface Standard TTL serial communication. Baud Rate 115200 Data Bits 8 stop bit 1 Parity Bits None Data frame format The data frame is a fixed format: frame header + frame length + data + checksum + frame tail. Frame header Fixed to 0x55 0x00 Frame Length Number of bytes in the entire data frame Data has different meanings depending on the type of command, see Part II Checksum Add all bytes of length and data, take the least significant byte, and negate End of frame Fixed at 0x00 0xAA Instructions Write command, no response (0x00) Frame Header Frame Length Command Type First Address Data Checksum Frame End 0x55 0x00 0x00 data 0x00 0xAA The write command will continuously modify the data starting from the first address, and no response will be generated. &gt;For example, modify the forward speed of the robot dog, the forward speed address is 0x30, so that it advances at the maximum speed, that is, the speed content is 0xFF, the specific instructions are as follows: &gt;0x55 0x00 0x09 0x00 0x30 0xFF 0xC7 0x00 0xAA &gt; where the checksum calculation process is as follows: &gt;0x09+0x00+0x30+0xFF=0x138, take the lowest byte 0x38, negate it to get 0xC7 Read command, there is a response (0x02) frame header frame length command type first address read length checksum **frame end* * 0x55 0x00 0x02 uint_8 0x00 0xAA The write command will continuously read the data starting from the first address, and no response will be generated. The format of the returned packet is: Frame Header Frame Length Command Type First Address Data Checksum Frame End 0x55 0x00 0x12 data 0x00 0xAA &gt;For example, read the angles of 12 servos, 0x50 is the address of the first servo position, and 0x0C means read 12 consecutively. The specific instructions are as follows: &gt;0x55 0x00 0x09 0x02 0x50 0x0C 0x98 0x00 0xAA &gt; where the checksum calculation process is as follows: &gt;0x09+0x02+0x50+0x0C=0x67, negate to get 0x98 &gt;Read return packets: &gt;0x55 0x00 0x14 0x12 0x50 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x89 0x00 0xAA Robot dog coordinate system definition Machine coordinate system In the initial standing position, the origin is directly below the fuselage, the forward direction of the robot dog is the positive X axis, the left is the positive Y axis, and the top is the positive Z axis. Single leg coordinate system The single-leg coordinate system is used to describe the position of the foot. The four legs correspond to four independent single-leg coordinate systems. The thigh joint is the origin. The forward direction of the robot dog is the positive x-axis, the left is the positive Y-axis, and the bottom is the positive Z-axis. Towards. The MemTable of XGO is as below Adress Function Read-Write Initial Value Note Mode 0x00 Mode of operation Read 0x00 State information 0x01 Battery level Read 0xff Range: 0-100, linearly corresponding to the lowest-highest battey level 0x02 XGO version Read 0x00 MINI 0x01 Lite 0x02 PRO 0x03 Performance mode Write 0x00 0x00 normal control mode 0x01 cyclic action 0x04 Calibration mode Write 0x00 0x01 Enter the calibration mode 0x00 Exit the calibration mode 0x13 Bluetooth Write XGOMINI The length of the name is 10 bytes, and it cannot be Chinese. After naming, the Bluetooth name is XGO_xxxxxx 0x20 Unmount Servo Read-Write 0x00 0x00 Servo in normal operation, 0x01 Unmount all servo, 0x11-0x14 Unmount 1-4 leg in order, 0x21-0x24 Remount 1-4 leg in order debug mode 0x21 Reset zero posttion of servo Write 0x00 0x00 servo nornal ,0x01 record the current position as the zero position,Once set as 0x01, the register will automatically jump to 0x00 0x30 Forward/backward movement speed Read-Write 0x80 Range: 0x00-0xff, linearly corresponding to the revers max. value-forward max. value. The forward direction is the same as the robot coordinate system Whole unit mode 0x31 Left/right movement speed Read-Write 0x80 Range: 0x00-0xff, linearly corresponding to the revers max. value-forward max. value. The forward direction is the same as the robot coordinate system 0x32 Clockwise/counterclockwise rotation speed Read-Write 0x80 The direction follows the right hand principle 0x33 Body shift distance along the x direction Read-Write 0x80 The point of contact between the foot and the ground remains unchanged and the body twists 0x34 Body shift distance along the x direction Read-Write 0x80 The point of contact between the foot and the ground remains unchanged and the body twists 0x35 Body height Read-Write 0x80 The point of contact between the foot and the ground remains unchanged and the body twists 0x36 Angle at which the body rotates around the x axis Read-Write 0x80 The direction follows the right hand principle 0x37 Angle at which the body rotates around the y axis Read-Write 0x80 The direction follows the right hand principle 0x38 Angle at which the body rotates around the z axis Read-Write 0x80 The direction follows the right hand principle 0x39 A given period in which the body rotates around the x axis Read-Write 0x00 0x00 stops, 0x01-0xff linearly corresponds to the minimum-maximum rotation speed, this function cannot work at the same time as setting the position register directly 0x3A A given period in which the body rotates around the y axis Read-Write 0x00 0x00 stops, 0x01-0xff linearly corresponds to the minimum-maximum rotation speed, this function cannot work at the same time as setting the position register directly 0x3B A given period in which the body rotates around the y axis Read-Write 0x00 0x00 stops, 0x01-0xff linearly corresponds to the minimum-maximum rotation speed, this function cannot work at the same time as setting the position register directly 0x3C mark time Read-Write 0x00 0x00 stop, 0x01-0xff linearly corresponds to the min.-max. marktime height 0x3D Moving mode Read-Write 0x00 0x00 Move at normal speed 0x01 Move at slow speed 0x02 Move at high speed 0x3E action Write 0x00 List of action commands, 0 is the default stance 1-N means each action (0-N is decimal value), 1: lying down, 2: standing up, 3: creeping, 4: circling, 5: stepping, 6: squatting, 7: rolling , 8: pitching, 9: yawing, 10 three-axis rotation, 11 peeing, 12 sitting, 13 beckoning, 14: stretching, 15: waving, 16 swaying, 17 begging for food, 18 searching food, 19 shaking hands 0x80 A given period in which the body shifts along the X axis Read-Write 0x00 0x00 stop, 0x01-0xff corresponds to the min.-max. rotation speed, the extent of movement is a half of the position limit 0x81 A given period in which the body shifts along the Y axis Read-Write 0x00 0x82 A given period in which the body shifts along the Z axis Read-Write 0x00 0x40 X position of leg 1 Read-Write 0x80 Range: 0x00-0xff, linearly corresponding to the reverse max. value-forward max. value, the forward direction is the same as the robot coordinate system leg mode 0x41 Y position of leg 1 Read-Write 0x80 0x42 Z position of leg 1 Read-Write 0x80 0x43 X position of leg 2 Read-Write 0x80 0x44 Y position of leg 2 Read-Write 0x80 0x45 Z position of leg 2 Read-Write 0x80 0x46 X position of leg 3 Read-Write 0x80 0x47 Y position of leg 3 Read-Write 0x80 0x48 Z position of leg 3 Read-Write 0x80 0x49 X position of leg 4 Read-Write 0x80 0x4A Y position of leg 4 Read-Write 0x80 0x4B Z position of leg 4 Read-Write 0x80 0x50 Position of Servo 11 Read-Write 0x80 Range: 0x00-0xff, linearly corresponding to the reverse max. value-forward max. value servo mode 0x51 Position of Servo 12 Read-Write 0x80 0x52 Position of Servo 13 Read-Write 0x80 0x53 Position of Servo 21 Read-Write 0x80 0x54 Position of Servo 22 Read-Write 0x80 0x55 Position of Servo 23 Read-Write 0x80 0x56 Position of Servo 31 Read-Write 0x80 0x57 Position of Servo 32 Read-Write 0x80 0x58 Position of Servo 33 Read-Write 0x80 0x59 Position of Servo 41 Read-Write 0x80 0x5A Position of Servo 42 Read-Write 0x80 0x5B Position of Servo 43 Read-Write 0x80 0x5C Servo speed Read-Write 0x80 Range: 0x00-0xff, linearly corresponding to the min. - max. value (only applicable under this mode) 0x5D Standing posture Write 0x00 0x00 inactive. 0x01 The gear position returns to the standing position. Once set as 0x01, the register will automatically jump to 0x00 0x61 IMU state Read-Write 0x00 0x00 close 0x01 self-stabilizing mode 0x62 ROLL Read 0x01 0x63 PITCH Read 0x02 0x64 YAW Read 0x03","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"For XGO developer","slug":"1-XGO-Mini/For-XGO-developer","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/For-XGO-developer/"}],"tags":[]},{"title":"Can not connect by bluetooth","slug":"1 XGO-Mini/Troubleshooting/Can not connect by bluetooth","date":"2022-02-23T15:45:57.000Z","updated":"2022-06-06T05:34:02.202Z","comments":true,"path":"wiki/1 XGO-Mini/Troubleshooting/Can not connect by bluetooth/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/Troubleshooting/Can%20not%20connect%20by%20bluetooth/","excerpt":"","text":"Download XGO from Google Play or Apple Store Tips: 1.Turn on Location Based Services of mobilephone. 2.If can not connet to XGO, try to reset your BLE and XGO.","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"Troubleshooting","slug":"1-XGO-Mini/Troubleshooting","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/Troubleshooting/"}],"tags":[]},{"title":"Luwu Dynamics","slug":"Xgo","date":"2022-02-22T17:07:57.000Z","updated":"2022-06-06T05:34:02.623Z","comments":true,"path":"wiki/Xgo/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/Xgo/","excerpt":"","text":"Company Introduction Founded in 2020, Lu Wu intelligent focuses on the research and development of the bionic quadruped robot dog XGO for the artificial intelligence education of young people. XGO has 12 degrees of freedom and can simulate the action of the spot Mini of Boston power. As a teaching aid, it can let children learn machinery, electronics and programming, combine the robot vision and natural voice processing functions and supporting artificial intelligence teaching materials, Let teenagers learn AI and lay a foundation for adapting to the future artificial intelligence life.At present, the company has 5 core personnel with master’s degree or above from Harbin Institute of technology and Tsinghua University. The company has two core patents, and its products have won 6 government and national awards at all levels in the field of educational robots: the international champion of ICRA DJI artificial intelligence challenge, the first prize of the first high-quality achievement award of college education, the first prize of the National College Students’ mechanical innovation design competition, and the national first prize of robomasters in the National College Students’ robot competition. The first prize of Harbin university students’ Entrepreneurship contest, 2019 Internet plus the Gold Award for innovation and entrepreneurship competition. XGO Serials XGO-Mini XGO-Lite XGO-Ultra Host K210 with Camera,Screen and Mic R329 with Camera,Screen and Mic Raspberry Pi 4B Programm XGOEdu AI-Blockly Python Structure 1.5mm Al alloy 1mm Al alloy 1mm Al alloy Dimension default 25-15-16cm default 23-14-16cm default 25-15-22cm Weight 700g 500g 800g Servo 6V 4.5 kg serial bus servo 6V 2.3kg serial bus servo 6V 4.5kg serial bus servo Leg&amp;foot Silicone&amp;Nylon ABS Silicone&amp;ABS Client STM32F405RGT6 STM32F405RGT6 ESP32 Battery 18650 2S 2500mah 18650 2S 2500mah 18650 2S 2500mah Charger 8.4V1A 8.4V1A 8.4V1A Endurance 1h 2h 1h","categories":[],"tags":[]},{"title":"Course center","slug":"1 XGO-Mini/Course center","date":"2022-02-16T15:45:59.000Z","updated":"2022-06-06T05:34:01.805Z","comments":true,"path":"wiki/1 XGO-Mini/Course center/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/Course%20center/","excerpt":"","text":"Course Introduction XGO-Mini K210 robot dog series courses are mainly for the upper grades of primary school and junior high school. There are six modules with a total of 40 class hours, including the series of \"Knowledge Popularization\" series. In this module, students will learn what artificial intelligence is, artificial intelligence The history of intelligence, what the Turing test is, the history of robotics, and what artificial intelligence brings to our minds. In the series of \"Dog Basics\" and \"Mechanical Dog Movement\", students will explore the mysterious mysteries of robot dogs; in the \"Programming Basics\" series of courses, they can quickly improve their programming skills; in order to make students understand the most cutting-edge and most interesting In the \"Intelligent Voice\" and \"Intelligent Image\" series of courses, through intimate interaction with dogs, use codes to empower dogs, make dogs smarter and wiser, and become an artificial intelligence dog! ; In the course of \"Dog Advanced\", it is the first to use graphical programming to allow primary and secondary school students to understand the gait algorithm of quadruped robots, realize path planning through parameter adjustment, and finally use the knowledge learned to complete the project. The course adopts a project-based teaching method, and leads students to deeply explore and understand the principle of robot dogs through close-to-life and interesting scenarios, realize the application of artificial intelligence technology through hands-on programming, and improve students' innovative thinking and practical ability through teaching and entertainment. , cultivate information-based thinking and information literacy, and lay a solid foundation for students' future study and life. Course Catalog","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"}],"tags":[]},{"title":"Course center","slug":"2 XGO-Lite/Course center","date":"2022-02-16T15:45:59.000Z","updated":"2022-06-06T05:34:02.212Z","comments":true,"path":"wiki/2 XGO-Lite/Course center/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/2%20XGO-Lite/Course%20center/","excerpt":"","text":"updating","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/2-XGO-Lite/"}],"tags":[]},{"title":"Programming platform","slug":"1 XGO-Mini/Programming platform","date":"2022-02-15T15:45:57.000Z","updated":"2022-06-06T05:34:01.942Z","comments":true,"path":"wiki/1 XGO-Mini/Programming platform/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/Programming%20platform/","excerpt":"","text":"Introduction to XGOEdu XGOEdu is a visual building block programming platform developed for the XGO K210 module. Users can write programs in a graphical way, and can also directly read or write Python programs. After the program is written, it can be executed online or uploaded to the hardware module. With this platform, users can empower their projects with AI without connecting hardware to the Internet. On the basis of providing entry-level Python syntax (logic, looping, mathematical operations, variables, word processing, lists, dictionaries, tuples, sets, functions, file operations, time), the platform also provides module programming &amp; related Different types of functions, such as: serial input and output, 10 input and output, button/LED light control, microphone data acquisition, camera control, audio and video processing, use of models (including face recognition, face recognition, Object Recognition, Object Classifier, Handwritten Digit Recognition). Users can also train models based on TinyYOLO or MobileNET by themselves. After format conversion through our platform, they can be programmed through the programming platform and run directly on the AI ​​module of XGO. XGOEdu download Visual programming platform for XGO-Mini k210 download. Connect the robot dog to the computer Lay the robot dog on the desktop, keep the battery fully charged, press the power button, insert a random Android data cable into the bottom of the AI ​​module, and insert another into the computer USB port, as shown in the figure below. Program the robot dog with XGOEdu After installing XGOEdu, double-click the XGOEdu button to start the programming interface to program the robot dog , the XGOEdu programming interface is divided into 6 areas: Document access area: program project name, save (save as .xml file), delete all building blocks and one-click screenshots of all building blocks Auxiliary area: sample loading, project file import and export, language setting Building block command area: In addition to the basic building blocks (from \"logic\" to \"serial communication\"), there are different extended building blocks in different modes. Block programming area: Drag blocks into this area for programming. Python programming area: When the user drags the building block into the building block programming area, the corresponding Python source code will be generated here, allowing users to edit, copy, download and upload the code, and download the python document with the suffix .py format. Upload area: Users can choose to use online debugging or download mode. The main page of XGOEdu is shown in the figure below. For details, please refer to the course PPT. Programming experience 1: Display the Hello World in the screen module! First, turn on the XGO-Blockly. Then connect the module and the computer with the data cable to check whether the upload area shows the green box + pair sign, and the serial port display with the COM + number. After the two items are guaranteed, you can start programming. Click the following instructions in the block instruction area and drag them to the block programming area: (1) Extension module | Screen: \"screen initialization\", \"create a blank canvas\", \"set the canvas coordinates\" (2) Loop: Repeat Always (3) Extension module | Screen: Screen Text and enter Hello World!” (4) Extension Module | Screen: Show Canvas (Text Size can be changed by modifying the number; color optional, select white here) Programming experience 2: XGO mini custom face recognition First, turn on the XGO-Blockly. Then connect the module and the computer with the data cable to check whether the upload area shows the green box + pair sign, and the serial port display with the COM + number. After the two items are guaranteed, you can start programming. Click the following instructions in the block instruction area and drag them to the block programming area: (1) Machine dog: \"Machine dog initialization\" (2) Loop: Repeat Always (3) Artificial intelligence | AI model: experimental function \"custom initialization face recognition model\" (4) Logic: \"If\" \"=\" (5) Text: Fill in Name1 (6) Artificial intelligence | AI model: the experimental function \"identified the object of the face model\" (7) Machine dog: \"Machine dog execute instruction\" selection action","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"}],"tags":[]},{"title":"Programming platform","slug":"2 XGO-Lite/Programming platform","date":"2022-02-15T15:45:57.000Z","updated":"2022-06-06T05:34:02.250Z","comments":true,"path":"wiki/2 XGO-Lite/Programming platform/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/2%20XGO-Lite/Programming%20platform/","excerpt":"","text":"updating","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/2-XGO-Lite/"}],"tags":[]},{"title":"Remote control","slug":"1 XGO-Mini/Remote control","date":"2022-02-14T15:45:57.000Z","updated":"2022-06-06T05:34:02.170Z","comments":true,"path":"wiki/1 XGO-Mini/Remote control/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/Remote%20control/","excerpt":"","text":"1. summary This software is a robot controller developed by Luwu Intelligence. The software connects Bluetooth and robot through mobile phones to data communication, providing users with convenient and simple remote control interface and a variety of other control methods, and greatly facilitates users' control of the robot. The software can be used without login, after installed search and match robot equipment and identify the types of robots. The software is generally divided into four parts: Main page, Bluetooth interface, Setup interface and Control interface.The portal to other interfaces is provided on the home interface; interactive function with Bluetooth connection of the robot; the setting interface provides options to change APP settings; and the control interface provides a variety of remote control functions. 2.Detailed module solution 2.1.Home page Click on the software icon, and enter the APP. First of all, users will see the welcome interface as the picture above, the interface background picture is the Luwu intelligent mini version of the quadruped robot, but also shows the version number of the current software.The welcome interface lasts for 3 seconds and goes to the home page. The main page provides access to the other interfaces, as shown above, as described below: 1）Bluetooth: If there is no robot device connected at this time, click the Bluetooth button will enter the Bluetooth connection interface, you can search and connect the robot device. Note: Bluetooth of the mobile phone is needed here. On opening for the first time, the user needs to authorize the corresponding permission of the APP, otherwise the Bluetooth function will not be used normally.When entering the Bluetooth connection interface, if the phone Bluetooth is not open, the user will be prompted to open Bluetooth, otherwise the function will not use Bluetooth normally. The Bluetooth connection interface is shown in the figure below.Shake the phone, and the APP will automatically connect to the nearest robotic device. If there are multiple devices nearby or users want to connect the device through the robot name, click the search button, after a period of search, all available devices nearby will be listed, as shown in the figure below, click a device name to connect the device. If the robot device has been connected at this time, click the Bluetooth button to pop up the window shown in the figure below, and the user can disconnect the connection. 2) Calibration: Click the calibration button to enter the calibration interface to reset the initial position of the robot.After reading carefully, click I know, click to enter the calibration mode button, at this time the robot will no longer output torque, external force can rotate, the user needs to put the robot as the specified position (see the secondary development manual), and then click the complete calibration button, the robot will record the current position as the initial position and automatically complete the restart. Note: The calibration button is hidden by default in the main interface. The user can cancel the hidden in the Settings interface. See the Settings section for details.This operation is a professional user operation, the operation is irreversible, please read the instructions carefully after the operation. 3）Settings: Click the Settings button to enter the Settings interface. As shown in the figure below, users can set \"whether the APP will automatically close Bluetooth\" and the setting language (currently only Chinese and English) Note When running this project as a developer is selected as an option, the calibration button on the main interface is unhidden. About: Click the About button to enter the About interface and see more information about this product. 5）Control interface: Click the performance mode, complete machine control, single-leg control and rudder machine control buttons to enter different control interfaces respectively. Slide and switch different modes from left and right in the main page. You can control the connected robot equipment in real time. Please refer to the next section for details. 2.2.Control interface The control interface enables the user to directly control the robot in different ways, equivalent to the user having multiple remote controls, respectively described as follows: 1）Machine control: complete machine control provides four modes of operation. Ordinary users control the movement and rotation of the robot through the button; advanced users control the movement and rotation of the robot through the rocker; XYZ allows users to control the 3D translation of the robot body through the rocker; PRY allows users to control the three-dimensional rotation of the robot body through the rocker.In addition, you can also control the height of the robot by dragging the lower sliding bar, and change the movement mode, open and close the gyroscope by clicking the upper right corner button.The blue dial displays the current device power, with 0 when the device is not connected; the red dial displays the current speed.The top two graphs give the ordinary and advanced interfaces. 2）Performance mode: the user allows the robot to perform the corresponding actions by clicking each button, click the rotation robot will perform all actions repeatedly, and click the Reset robot will restore the initial state. 3）Single leg control: The interface allows users to directly control a leg of the robot by changing the three-dimensional coordinate system by selecting the leg to control and then dragging the sliding lever. 4）Servo control: the interface allows the user to directly control a certain steering machine of the robot, changing the angle of the corresponding steering machine by selecting the position to control the rudder machine and then dragging the sliding lever. 3.Detailed function solution Example of controlling the robot forward function using a remote control 1）Enter the APP, and click the Bluetooth button after entering the main page. As shown in the picture above, click to open Bluetooth, enter the Bluetooth connection interface, and shake the phone. The APP will automatically connect to the robot device and jump to the main interface. 2）After the connection is successful, click the control button of the whole machine to enter the remote control interface. Take the ordinary control mode as an example, click the left upward button, you will see the robot moving forward, release the button and the robot to stop the movement. 3）Click the return button in the top left corner to return to the main interface, and click the Bluetooth button to disconnect.Two consecutive return clicks to exit the APP.","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"}],"tags":[]},{"title":"Quick start","slug":"1 XGO-Mini/Quick start","date":"2022-02-14T15:45:57.000Z","updated":"2022-06-06T05:34:01.957Z","comments":true,"path":"wiki/1 XGO-Mini/Quick start/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/Quick%20start/","excerpt":"","text":"How to use ON Place the robot dog in a lying position to avoid the joints being stuck, then press the power switch on the back of the robot dog, the power ring light on the switch lights up, and the robot dog slowly stands, indicating that the boot is successful. OFF Press the power switch on the back, the ring light starts to flash, the robot dog slowly falls down, and then the ring light goes out, indicating that the system is completely shut down. Charge When the power of the robot dog is too low, the ring light of the robot dog switch button will flash and lie down, which means that the robot dog needs to be charged. Insert the lithium battery special charger into the charging port on the abdomen of the robot dog, and it can be fully charged in about 2 hours. The power indicator of the charger is red when charging, and the indicator turns green when fully charged. offline modee The offline mode means that the robot dog can be operated and experienced by pressing the buttons on the AI ​​module when it is separated from the mobile phone or computer. Interface description After laying the robot dog flat, press the power button, the robot dog enters the default standing initial state, and the screen lights up as shown in the figure below. There are 4 pieces of information in the initial interface that we need to master. The positions of the A, B and C keys on the module are shown in the figure below. Firmware version: Indicates the firmware version number of the current AI module. You can download the latest version of firmware and tools from the official website. Operation instructions: A and B keys control the switching of menu options on the interface, C key means to confirm the operation, long press C key to exit the current program. Run the last program: When uploading the program to the AI ​​module through programming, you can select this option to let the AI ​​module run the latest uploaded program; Try the sample program: select this option, you can enter the next interface to experience the sample program stored in the SD card of the AI ​​module. Operation Introduction According to the initial interface description, the operation module enters the sample program interface, and the key sequence should be: B→C. We use the A, B, C keys to operate the sample program list interface, A key: up a sample program, B key: down a sample program / page, C key: select the sample program and load, long press C key: exit Sample program to the main menu. The operation buttons of the sample program list interface are the same as the initial interface. There are 3 pieces of information that we need to master. 1. Types of sample programs: The sample programs are divided into visual and speech types. 2. Sample program list: The selected sample program will have a white box and its name will light up; 3. Sample program serial number: There are 17 sample programs in this firmware version. The number on the left side of the slash is the serial number of the selected sample program, and the number on the right side of the slash is the total number of sample programs. Sample program Performance mode After entering the program, the screen module displays the expression animation cyclically, and the robot dog enters the performance mode (performs various actions). Face detection After entering the program, the AI ​​module detects the face in the screen. If a face is detected, the screen module will use a rectangle to frame the face in the screen, and the robot dog will perform a handshake. Face recognition After entering the program, the AI ​​module can recognize the face, frame it, and mark the key points; press the B key to take a picture of the face and mark it as master, a total of 3 face photos can be taken, respectively Labeled as master, friend1, friend2. When the camera captures the marked face again, the frame turns green and shows the mark and confidence (how much the face is the marked face). If the master face is recognized, the robot dog will perform a three-axis rotation. -Face follow After entering the program, the AI ​​module performs face recognition, and according to the position of the face in the screen, the robot dog automatically adjusts the center of the screen to align the face to form the effect of following the face. Mask detection After entering the program, the AI ​​module will perform mask detection to identify whether the person in the screen is wearing a mask; if it is detected that the person is not wearing a mask, the person will be marked with a red frame, and the detection reliability will be displayed. The dog performs a shaking action; if it detects wearing a mask, the portrait will be marked with a green frame, and the detection reliability will be displayed, and the robot dog will perform a nodding action; if the detection reliability is less than a certain value, it will be marked with a blue frame portrait. Boxing game After entering the program, the module will recognize the human hand in the screen, and according to the different gestures of the hand, the robot dog will display the picture that makes the robot dog guess the boxing victory. (In order to improve the recognition accuracy, please try to keep the background simple and bright enough when using it) Gesture recognition After entering the program, the module will recognize the human hand in the screen, and the robot dog will make different actions according to the different gestures of the hand. e.g. Gesture - action; fist - circle; rejection - lying down; scissor hand - three-axis linkage; number 6 - wave; ok - sit down. (In order to improve the recognition accuracy, please try to keep the background simple and bright enough when using it) Hand following After entering the program, the AI ​​module will detect the hand, recognize the hand, and frame it. According to the position of the hand in the screen, the robot dog will automatically adjust the center of the screen to align the hand to form a follower hand. Effect. Traffic sign recognition After entering the program, the module starts to recognize the traffic signs. The identifiable signs include: \"go straight\", \"stop\", \"no passage\" and \"stop\" (see 1. Traffic signs below for signs); After being identified, the robot dog will perform corresponding actions: forward, stand, back, and sit. Traffic light recognition After entering the program, when the module recognizes the green light, it will be marked with a green sign on the screen, and the robot dog will start to go straight; when the module recognizes the red light, it will be marked with a red sign on the screen, and at the same time The robot dog stops moving. Object classification After entering the program, the AI ​​module will identify common objects. If a common object is identified, it will be framed on the screen and the name of the identified object will be identified; if no common object is identified, it will prompt \"Nothing Detected\". In addition, when the recognized common object is a person (\"person\"), the robot dog will perform a rocking action; when the recognized common object is a dog (\"dog\"), the robot dog will perform a peeing action; when the recognized common object is For the cat (\"cat\"), the robot dog will perform a three-axis rotation. Bone recognition After entering the program, the screen prompts to take a picture of the bone, press the B button to take a picture of the bone (5 pictures in total), and then the screen prompts to take a picture of the green vegetable, press the B button to take the picture of the green vegetable (5 pictures in total). After the sampling is completed, the AI ​​module will identify the bones and vegetables. When the bones are identified, a logo will appear on the screen, and the robot dog will perform the foraging action; when the vegetables are not found, the logo will appear on the screen, and the robot dog will perform the standing action. Area color analysis After entering the program, a color-picking area square will appear in the center of the screen, and the color values ​​and corresponding color blocks in the area will be displayed at the top of the screen. Automatically learn and track the color After entering, the program first automatically captures and learns the color of the center area of ​​the current screen (lasting about 2 seconds); then it enters the tracking stage, and detects and identifies the area in the screen with a similar color to the learning content. Color block tracking After entering the program, the module will recognize the color blocks (solid color squares) in the screen, and adjust its position according to the relative position of the color blocks and itself. (The brighter the color block, the better the effect) Find the QR code and decode it After entering the program, when the QR code (QR code) appears on the screen, the module will identify it and display the decoded text on the top. If the text content is some specific command statements (see 2. QR code below for details), the robot dog will perform corresponding actions. Mandarin recognition (cs) After entering the program, the AI ​​module performs Mandarin recognition. There are various action command statements displayed on the screen. When the module recognizes the action command statement, the robot dog will execute the corresponding action. Audio analysis After entering the program, the screen module will display the audio collected by the microphone, and the robot dog will make different actions according to the audio, specifically: when the bass (red circle) is collected, the robot dog performs the action of lying down; Bass (green circle), the robot dog performs a stretching action; mid-high pitch (blue circle) is collected, the robot dog performs a sitting action; high pitch (purple circle) is collected, the robot dog performs a standing action. Sample program image material download","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"}],"tags":[]},{"title":"Quick start","slug":"2 XGO-Lite/Quick start","date":"2022-02-14T15:45:57.000Z","updated":"2022-06-06T05:34:02.255Z","comments":true,"path":"wiki/2 XGO-Lite/Quick start/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/2%20XGO-Lite/Quick%20start/","excerpt":"","text":"updating","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/2-XGO-Lite/"}],"tags":[]},{"title":"Hardware overview","slug":"1 XGO-Mini/Hardware overview","date":"2022-02-13T15:45:57.000Z","updated":"2022-06-06T05:34:01.911Z","comments":true,"path":"wiki/1 XGO-Mini/Hardware overview/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/Hardware%20overview/","excerpt":"","text":"XGO-Mini K210 Architecture Diagram The core architecture of the XGO-Mini K210 version is the K210 artificial intelligence module, and the AI-related tasks of the robot dog are all completed by the host computer. The lower computer is developed by MCU, which is responsible for the power management of the robot dog, the servo drive and the core gait algorithm, etc., and encapsulates a complete serial communication protocol for the convenience of the upper computer. XGO-Mini K210 system architecture diagram Structure introduction The main structure of XGO-Mini K210 is composed of 1.5mm thick aluminum alloy structural parts and all-metal magnetic encoder servos. The legs are composed of silicone shanks and nylon foot pads. The AI ​​module and driver board of the head are composed of 4pin signal lines. Connection, built-in 2 18650 lithium batteries, the specific structure is shown in the figure below, here is XGO-Mini K210 3D model download. AI module AI module bracket Robot dog front cover Robot dog back cover Self-locking switch 18650 2S battery Core driver board Bottom cover of robot dog Charging port Metal High Speed ​​Magnetic Encoding Bus Servo ③The front cover of the robot dog, the ④the back cover of the robot dog and the ⑧ the bottom cover of the robot dog are used as the robot dog frame to connect various components. The front and rear legs are fixed on the front and rear sides of the bottom cover of the robot dog through four screws respectively; the core drive board is fixed in the middle of the bottom cover of the robot dog through four plastic screws. Each leg is equipped with three servos as elbow, shoulder and hip joints. Mechanically, the three joint servos are fixedly connected using aluminum alloy structural parts. Electrically, the elbow joint servo and shoulder joint servo, shoulder joint servo and hip joint servo, and hip joint servo and the core drive board are each connected with a servo wire, so that the core drive board can drive and control all the servos. joint servo. The AI ​​module is fixed on the front cover of the robot dog together with the AI ​​module bracket, and is connected to the core driver board through the AI ​​module serial port cable. The switch is fixed on the back cover of the robot dog with a nut, and is connected with the core driver board. The switch is a self-locking type, that is, it does not rebound after being pressed and the robot dog is in a continuous power-on state; after pressing it again, the robot dog is powered off and will lie down and shut down after 3 to 4 seconds. There are two 18650 2S batteries, which are installed on the battery holder on the core driver board through the correct positive and negative poles. The charging hole is integrated on the core driver board and exposed from the bottom cover of the robot dog. Servo introduction The modular servo joint of XGO-Mini is composed of a DC hollow cup motor, a reduction gear set, a 12-bit magnetic encoder and an integrated control circuit. It has its own closed-loop control and planning algorithm, high-speed bus communication, 360-degree angle control, and supports speed, Position, current, temperature feedback and control parameter adjustment functions provide high-performance servo drives for robots. The customized joint provides PID parameter adjustment, optimizes the joint impedance characteristics (compliance), and based on the basic kinematic gait planning, combined with the consideration of the center of gravity and the feedback of the IMU, as well as the requirements of the upper-level control commands, real-time can be performed adjustment. At the same time, a large speed ratio and high-efficiency reducer is adopted, which ensures the flexibility and improves the load-to-weight ratio. Batteries and Chargers XGO-Mini adopts 18650 2500 mAh 3C standard battery, adopts wide voltage charger design, and provides four kinds of charging plugs of national standard, American standard, British standard and EU. Introduction to the host computer K210 As the main control module of artificial intelligence-related applications, the AI ​​module has basic computer vision recognition functions and inference functions of machine learning models, which can help implement entry-level and advanced AI applications. AI Module Motherboard Built-in Kanzhi K210 chip, using RISC-V processor architecture, with audio-visual integration, independent IP core and strong programmable ability. Support Micro SD card to store images, audio, video, machine learning models and other data. Socket for integrated camera module for front-facing shooting. screen module Integrated camera module socket for rear camera use; 1.54-inch LCD full-color screen, displaying pictures in JPG, BMP and other formats; Can be used for external 2.5mm audio interface; Camera Module The resolution of the AI ​​camera is 30w pixels, which can be plugged into the screen module or AI module respectively to become a front or rear camera. Introduction to the lower computer STM32 Select STM32F405RGT6, which is ARM®Cortex®-M4 32-bit RISC core, operates at 168Mhz, has 64 pins, meets the computing power requirements of real-time kinematics inverse solution, and has enough interfaces and peripherals Communication, use the serial port to communicate with the serial port servo, the IIC interface reads the gyroscope MPU9250 data, and the system uses two 18650 lithium batteries for power supply.","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"}],"tags":[]},{"title":"Remote control","slug":"2 XGO-Lite/Remote control","date":"2022-02-13T15:45:57.000Z","updated":"2022-06-06T05:34:02.471Z","comments":true,"path":"wiki/2 XGO-Lite/Remote control/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/2%20XGO-Lite/Remote%20control/","excerpt":"","text":"updating","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/2-XGO-Lite/"}],"tags":[]},{"title":"specifications","slug":"1 XGO-Mini/specifications","date":"2022-02-12T15:45:57.000Z","updated":"2022-06-06T05:34:02.212Z","comments":true,"path":"wiki/1 XGO-Mini/specifications/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/specifications/","excerpt":"","text":"Function description It can realize AI edge computing graphical programming, such as face detection, object classification, speech recognition and other common programs. It can realize omnidirectional movement, six-dimensional attitude control, multiple motion gait and motion superposition, built-in nine-axis gyroscope, which can keep the body self-balancing. The product is equipped with a dedicated computer-side graphical programming platform with embedded common routines. Servo servos have joint angle readback function, which can be used for teaching programming. Platform Features IMU posture self-stabilization - the posture data obtained through the IMU adopts a closed-loop control method, no matter how the plane shakes, the robot dog remains stable. Six-degree-of-freedom attitude control of the whole machine--to achieve six-degree-of-freedom motion control of the body when the toes are not moving. IMU posture is supple--through the posture data obtained by IMU, the closed-loop control realizes that the robot dog can adapt to the external force, adjust to the target posture of hand movement, and realize the teaching function. User communication and secondary programming interface--open the underlying serial port protocol for secondary development and verification. Motion gait planning--the three postures of low, medium and high match the three speeds of the robot dog, using different gait strategies and planning algorithms Kinematics and dynamics simulation interface--under the ros environment, kinematics and dynamics simulations are performed on the rviz and gazebo platforms. Omnidirectional motion control--Because of the 12 active joints, the robot dog can move forward, translate and rotate omnidirectionally through kinematics decoupling, and supports motion superposition in multiple directions. Artificial intelligence - AI functions such as machine vision, face recognition, speech recognition, and simulation training. Configuration parameters The robot dog kit includes 12 bus servos; AI module; robot dog drive and sheet metal parts; 1 power adapter. The parts of the robot dog are made of aluminum alloy, anodized and colored, which is safe and non-toxic. Customized serial bus servo servo can realize precise movement control and expression. Supporting a complete curriculum system, including teaching PPT, teacher lesson plans, routines and PC-side programming platform. technical parameter Machine parameters: Model: XGO-Mini K210 Size: The default standing position is 25cm long, 15cm wide, 15cm high and 16cm high Weight: 700g -Material: Body Aviation Aluminum, Silicone Calf, Nylon Toe Servo parameters: Model: bus serial servo Output torque: 4.5KG•CM; Speed ​​(S/60°): 0.1 S/60°; Accuracy: 0.01 Working voltage range: 4.8V～7.4V Working temperature: -20℃～+60℃; Angle range: 0~360°; Weight: 20±1g. Motor type: hollow cup AI module parameters: Chip: Canaan K210 Screen: Full-color LCD screen, support positive and negative shooting, can display video, pictures and text. SD card support: support SD card, can read and write AI models and pictures and music. Microphone: MEMS digital microphone Keys: 3 programmable keys. Camera: OV2640, 30W pixels External connection: serial port, IIC, etc. Power system: Charger input voltage: 100-240V AC 50/60Hz; Charger output voltage: 8.4V; Charger output current: 1A, with overcurrent protection feature to prevent overcharge explosion. Battery: 18650 standard 2500mAh 3C discharge Certifications The products have passed CE and ROHS certification, and obtained relevant software copyright certificates and patent certificates.","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"}],"tags":[]},{"title":"Specifications","slug":"2 XGO-Lite/Specifications","date":"2022-02-12T15:45:57.000Z","updated":"2022-06-06T05:34:02.471Z","comments":true,"path":"wiki/2 XGO-Lite/Specifications/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/2%20XGO-Lite/Specifications/","excerpt":"","text":"XGO-lite Product Highlights 12 DOF Quadruped Robot Dog AI Chip: Machine Vision and Voice,Opensouce. Smart Servos: Metal Gear , High-Speed Blocky and Python Programming via APP or PC Fast Motion and Quiet Operation Aircraft Aluminum Construction 2 Hour Runtime Platform Features IMU posture self-stabilization: Based on the attitude data obtained from IMU and with closed-loop control, the robot dog can stay stabilized regardless of surface movement. 6 DOFs posture control: With fixed foot tips, allows the entire body to remain under 6 DOF motion control. Move, Record and Playback: You can move XGO's joints by hand and automatically record the sequence for playback as a program. User communication and secondary programming interface: The open-access underlying serial protocol applies to secondary development and verification. Motion gait planning: The robot dog comes with Low, medium, and high postures linked to three different speeds with appropriate gait strategies and rules. Kinematics and dynamics simulation interface: In the ROS scenario, kinematics and dynamics simulations are conducted on Rviz and gazebo platforms. Omnidirectional motion control: With 12 active joints and through kinematics decoupling, the robot dog can perform omnidirectional motion combining forward/reverse, and right/left with rotational input for a smooth gait in any direction. Artificial Intelligence: Machine vision, face recognition, speech recognition, model training, and other AI functions. Technical parameter Machine parameters: Model: XGO-lite Size: The default standing position is 25cm long, 15cm wide, 15cm high Weight: 550g Material: Body Aviation Aluminum, Legs ABS Processor:R329 with AI chip inside Camera:720P OV9732 Storage:16G SD card Battery:7.4V 2500mAh Charger:8.4V 1A Servo parameters: Model: bus serial servo Output torque: 2.3KG•CM; Speed(S/60°): 0.1 S/60°; Accuracy: 0.2 Working voltage range: 4.8V～7.4V Working temperature: -20℃～+60℃; Angle range: 0~300°; Weight: 13±1g. AI module parameters: OS:Armbian CPU:Dual-core ARM Cortex™-A53 @ 1.5GHz 32KB L1 l-cache + 32KB L1 D-cache per core 256KB L2 cache AIPU(NPU):ZhouYi Z1 AIPU, MAX 0.25TOPS@600MHz DRAM:SIP 256MB DDR3 Memory:TF card Video Encoder:H264/5 &amp;JPEG,MAX 720p@30fps Camera:USB-C,720P@30fps HD,OV9732 Micphone:Two Analog microphone,91 dB SPL@1 kHz sensitivity Screen:1.53 inch SPI ,Resolution 240*240 Key:1 Reset Key , 4ADC Key, 1 *FEL Key Debug:CPU UART ,USB OTG GPIO:31 OP 2.54mm ,4 power pin(5V/GND),11GPIO pin ,14pin mx1.25 Certifications The products have passed CE and ROHS certification, and obtained relevant software copyright certificates and patent certificates.","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/2-XGO-Lite/"}],"tags":[]},{"title":"Can not walk strightly in line","slug":"1 XGO-Mini/Troubleshooting/Can not walk strightly in line","date":"2022-02-12T15:45:57.000Z","updated":"2022-06-06T05:34:02.202Z","comments":true,"path":"wiki/1 XGO-Mini/Troubleshooting/Can not walk strightly in line/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/Troubleshooting/Can%20not%20walk%20strightly%20in%20line/","excerpt":"","text":"The principle of the robot dog walking in a straight line: The main control board of the robot dog is equipped with a gyroscope, which can sense the current pitch, roll and yaw angle of the robot. The robot dog turns left and right to change the yaw angle. When the robot dog receives a move command, it will record the current yaw angle, keep the yaw angle unchanged during the movement, and update the yaw angle to be tracked if it receives a turn command. There are two manifestations of the robot dog not walking in a straight line: When moving forward, the robot dog walks diagonally, but the direction remains the same In this case, when the robot dog is moving forward, you can twist its forward direction by hand to see if it can turn back to the original direction. If there is no rotation, it means that the gyroscope on the motherboard is invalid. Please restart and try again. If it still does not work after restarting several times, it means that the gyroscope is faulty. If the robot dog can turn back to the original forward direction after twisting, it means that the gyroscope is working normally. It may be caused by the inaccurate zero position of the steering gear. Please re-calibrate and try again. The robot dog turns when moving forward, and the orientation changes greatly It means that the gyroscope on the motherboard is invalid. Please restart and try again. If it still does not work after several restarts, it means the gyroscope is faulty.","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"Troubleshooting","slug":"1-XGO-Mini/Troubleshooting","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/Troubleshooting/"}],"tags":[]},{"title":"What's in the box?","slug":"1 XGO-Mini/What's in the box","date":"2022-02-11T15:45:57.000Z","updated":"2022-06-06T05:34:02.202Z","comments":true,"path":"wiki/1 XGO-Mini/What's in the box/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/What's%20in%20the%20box/","excerpt":"","text":"XGO-Mini K210 AI Kits include: XGO-Mini K210 main body packing box 8.4V1A charger microusb cable user manualdownload Box list 1 XGO-Mini K210 main body Box list 2 packing box Box list 3 Box list 4","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"}],"tags":[]},{"title":"What's in the box?","slug":"2 XGO-Lite/What's in the box","date":"2022-02-11T15:45:57.000Z","updated":"2022-06-06T05:34:02.472Z","comments":true,"path":"wiki/2 XGO-Lite/What's in the box/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/2%20XGO-Lite/What's%20in%20the%20box/","excerpt":"","text":"XGO-Lite Kits include: XGO-Lite main body 8.4V1A charger Usb cable User manualdownload","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/2-XGO-Lite/"}],"tags":[]},{"title":"Product introduction","slug":"1 XGO-Mini/Product Introduction","date":"2022-02-10T15:45:57.000Z","updated":"2022-06-06T05:34:01.916Z","comments":true,"path":"wiki/1 XGO-Mini/Product Introduction/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/1%20XGO-Mini/Product%20Introduction/","excerpt":"","text":"XGO-Mini K210 Overview XGO-mini is a desktop AI robot dog with 12 DOF powered by a Kendryte K210 chip for AI edge computing applications. It supports omnidirectional movement, 6D posture control, posture stability, and multiple motion gaits, internally equipped with 9-axis IMU, joint position sensors and current sensors to feedback postures, joint rotation and torque readings for internal algorithms and secondary development. The robot dog allows for Blocky and Python programming via a custom APP or PC for developing AI applications. Product Highlights 12 DOF Quadruped Robot Dog AI Chip: Machine Vision, Facial and Gesture Recognition, etc. Smart Servos: Metal Gear and Housing, High Speed and Torque , Ball Bearing, Magnetic Encoding ,Serial Bus Blocky and Python Programming via APP or PC Quick Start,Fast Motion and Quiet Operation Aircraft Aluminum Construction 1.5 Hour Runtime XGO-Mini k210 Campaign Campaign on KickstarterXGO-Mini, Advanced Quadruped Robot With AI Modules. Campaign on IndiegogoXGO-Mini, Advanced Quadruped Robot With AI Modules. XGO-Mini k210 distributor RobotShop, the World's Leading Robot Store for Domestic and Professional Robot Technology.XGO Mini Quadruped Robot Dog. XGO-Mini k210 media report Recommended products on Canaan official website.XGO robot dog. XGO-Mini k210 hands-on Review from Youtubers With over 1000 videos on their archives and 75M subscribers, Sentdex is a great channel.Robot Dogs: A Programmer's Best Friend. On Maker's Muse we aim to Empower Creativity through Technology.My new robot dog! XGO-Mini Review. Featuring robots, gadgets, games, toys and more! We even do fun animations from 360 videos to more! It's all here on KhanFlicks! UNBOXING &amp; LETS PLAY! - XGO-Mini - The AI Cyber Robot Dog that can Dance!. KI-Roboterhund im Test | Boston-Dynamics-Klon für 550 Euro.KI-Roboterhund im Test | Boston-Dynamics-Klon für 550 Euro. XGO-Mini market","categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"}],"tags":[]},{"title":"Product Introduction","slug":"2 XGO-Lite/Product Introduction","date":"2022-02-10T15:45:57.000Z","updated":"2022-06-06T05:34:02.229Z","comments":true,"path":"wiki/2 XGO-Lite/Product Introduction/","link":"","permalink":"https://xgorobot.github.io/XgoWiki-en/wiki/2%20XGO-Lite/Product%20Introduction/","excerpt":"","text":"XGO-Lite Overview XGO-lite is a desktop Al robot dog with 12 DOF powered by a Allwinner R329 chip for Al edge computing applications. It supports omnidirectional movement, 6D posture control, posture stability, and multiple motion gaits, internally equipped with 9-axis IMU, joint position sensors and current sensors to feedback postures, joint rotation and torque readings for internal algorithms and secondary development. The robot dog allows for Blocky and Python programming via a custom APP or PC for developing Al applications. XGO-Mini Campaign Campaign on KickstarterXGO-Mini, Advanced Quadruped Robot With AI Modules. Campaign on IndiegogoXGO-Mini, Advanced Quadruped Robot With AI Modules. XGO-Mini distributor RobotShop, the World's Leading Robot Store for Domestic and Professional Robot Technology.XGO Mini Quadruped Robot Dog. XGO-Mini media report Recommended products on Canaan official website.XGO robot dog. XGO-Mini hands-on Review from Youtubers With over 1000 videos on their archives and 75M subscribers, Sentdex is a great channel.Robot Dogs: A Programmer's Best Friend. On Maker's Muse we aim to Empower Creativity through Technology.My new robot dog! XGO-Mini Review. Featuring robots, gadgets, games, toys and more! We even do fun animations from 360 videos to more! It's all here on KhanFlicks! UNBOXING &amp; LETS PLAY! - XGO-Mini - The AI Cyber Robot Dog that can Dance!. KI-Roboterhund im Test | Boston-Dynamics-Klon für 550 Euro.KI-Roboterhund im Test | Boston-Dynamics-Klon für 550 Euro.","categories":[{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/2-XGO-Lite/"}],"tags":[]}],"categories":[{"name":"1 XGO-Mini","slug":"1-XGO-Mini","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/"},{"name":"For XGO developer","slug":"1-XGO-Mini/For-XGO-developer","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/For-XGO-developer/"},{"name":"F.A.Q","slug":"1-XGO-Mini/F-A-Q","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/F-A-Q/"},{"name":"3 XGO-Ultra","slug":"3-XGO-Ultra","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/3-XGO-Ultra/"},{"name":"Troubleshooting","slug":"1-XGO-Mini/Troubleshooting","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/1-XGO-Mini/Troubleshooting/"},{"name":"2 XGO-Lite","slug":"2-XGO-Lite","permalink":"https://xgorobot.github.io/XgoWiki-en/categories/2-XGO-Lite/"}],"tags":[]}